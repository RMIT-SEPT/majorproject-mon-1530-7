version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  build-backend:

    working_directory: ~/repo/BackEnd
    docker:
      - image: circleci/openjdk:11-jdk-stretch
      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: backenddb
          POSTGRES_PASSWORD: postgres
    environment:
      ECR_REPOSITORY_NAME: xxx
      FULL_IMAGE_NAME: xxx

    steps:

      - checkout:
          path: ~/repo

      - setup_remote_docker

      - restore_cache:
          key: circleci-backend-java-spring-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: circleci-backend-java-spring-{{ checksum "pom.xml" }}

      - run: mvn test

      - run: mvn package

      - store_test_results:
          path: target/surefire-reports

      - store_artifacts:
          path: target/BackEnd-java-spring-0.0.1-SNAPSHOT.jar

      - run:
          name: Install AWS dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli

      - run:
          name: Build backend image
          command: |
            docker build -t $FULL_IMAGE_NAME .

      - run:
          name: Push backend image
          command: |
            aws ecr get-login-password --region us-east-1 | docker login AWS --password-stdin xxxx.dkr.ecr.us-east-1.amazonaws.com
            docker push $FULL_IMAGE_NAME
    
  build-frontend: 
    docker:
      - image: circleci/node:12.18.3-browsers
    environment:
      ECR_REPOSITORY_NAME: xxx
      FULL_IMAGE_NAME: xxx
      
    working_directory: ~/repo/FrontEnd

    steps:
      - checkout:
          path: ~/repo

      - setup_remote_docker

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache

          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn test -- --coverage --updateSnapshot

      - run:
          name: Install AWS dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli

      - run:
          name: Build frontend image
          command: |
            docker build -t $FULL_IMAGE_NAME .

      - run:
          name: Push frontend image
          command: |
            aws ecr get-login-password --region us-east-1 | docker login AWS --password-stdin xxxx.dkr.ecr.us-east-1.amazonaws.com
            docker push $FULL_IMAGE_NAME

workflows:
  version: 2
  build_frontend_and_backend:
    jobs:
      - build-backend:
          filters:
            branches:
              only: develop
      - build-frontend:
          filters:
            branches:
              only: develop